module SkelCalc = struct

(* OCaml module generated by the BNF converter *)

open AbsCalc

type result = string

let failure x = failwith "Undefined case." (* x discarded *)

let rec transExp (x : exp) : result = match x with
    EAdd (exp0, exp) -> failure x
  | ESub (exp0, exp) -> failure x
  | EMul (exp0, exp) -> failure x
  | EDiv (exp0, exp) -> failure x
  | EInt integer -> failure x



end
